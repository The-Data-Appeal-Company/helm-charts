image:
  repository: prestosql/presto
  tag: 345
  pullPolicy: IfNotPresent
  securityContext:
    runAsUser: 1000
    runAsGroup: 1000

presto:
  config:
    jmx:
      registryPort: 9080
      serverPort: 9081
    query:
      maxMemory: "4GB"
      maxMemoryPerNode: "1GB"
    additional_params:
      http-server.log.max-history: 5
      log.max-history: 5

  coordinator:
    config:
      path: /usr/lib/presto/etc
      server:
        port: 8080
        loglevel: "INFO"
      jvm:
        maxMemoryPercentage: "90"
        minMemoryPercentage: "80"
        gcMethod:
          type: "UseG1GC"
          g1:
            heapRegionSize: "32M"
        additional_params: [ ]

      node:
        environment: production
        dataDir: /data/presto
        pluginDir: /usr/lib/presto/plugin

    resources: { }

    nodeSelector: { }

    tolerations: [ ]

    affinity: { }

  worker:
    replicas: 2
    config:
      path: /usr/lib/presto/etc
      gracefulShutdown:
        enabled: true
        gracePeriodSeconds: 10
      server:
        port: 8080
        loglevel: "INFO"
      jvm:
        maxMemoryPercentage: "90"
        minMemoryPercentage: "80"
        gcMethod:
          type: "UseG1GC"
          g1:
            heapRegionSize: "32M"
        additional_params: [ ]
      node:
        environment: production
        dataDir: /data/presto
        pluginDir: /usr/lib/presto/plugin

    resources: { }

    nodeSelector: { }

    tolerations: [ ]

    affinity: { }

  connectors:
    memory.properties: |-
      connector.name=memory

    tpcds.properties: |-
      connector.name=tpcds
      tpcds.splits-per-node=4

service:
  labels: { }
  type: ClusterIP


exporters:
  jmx:
    enabled: true
    image:
      repository: sscaling/jmx-prometheus-exporter
      tag: 0.3.0
      pullPolicy: IfNotPresent
    config:
      lowercaseOutputName: false
      ## ref: https://github.com/prometheus/jmx_exporter/blob/master/example_configs/zookeeper.yaml
      rules:
        - pattern: "org.apache.ZooKeeperService<name0=ReplicatedServer_id(\\d+)><>(\\w+)"
          name: "zookeeper_$2"
        - pattern: "org.apache.ZooKeeperService<name0=ReplicatedServer_id(\\d+), name1=replica.(\\d+)><>(\\w+)"
          name: "zookeeper_$3"
          labels:
            replicaId: "$2"
        - pattern: "org.apache.ZooKeeperService<name0=ReplicatedServer_id(\\d+), name1=replica.(\\d+), name2=(\\w+)><>(\\w+)"
          name: "zookeeper_$4"
          labels:
            replicaId: "$2"
            memberType: "$3"
        - pattern: "org.apache.ZooKeeperService<name0=ReplicatedServer_id(\\d+), name1=replica.(\\d+), name2=(\\w+), name3=(\\w+)><>(\\w+)"
          name: "zookeeper_$4_$5"
          labels:
            replicaId: "$2"
            memberType: "$3"
      startDelaySeconds: 30
    env: {}
    resources: {}
    path: /metrics

    serviceMonitor:
      interval: 30s
      scrapeTimeout: 30s
      scheme: http
