image:
  repository: prestosql/presto
  tag: 345
  pullPolicy: IfNotPresent
  securityContext:
    runAsUser: 1000
    runAsGroup: 1000

presto:
  config:
    jmx:
      registryPort: 9080
      serverPort: 9081
    query:
      maxMemory: "4GB"
      maxMemoryPerNode: "1GB"
    additional_params:
      http-server.log.max-history: 5
      log.max-history: 5

  coordinator:
    config:
      path: /usr/lib/presto/etc
      server:
        port: 8080
        loglevel: "INFO"
      jvm:
        maxMemoryPercentage: "90"
        minMemoryPercentage: "80"
        gcMethod:
          type: "UseG1GC"
          g1:
            heapRegionSize: "32M"
        additional_params: [ ]

      node:
        environment: production
        dataDir: /data/presto
        pluginDir: /usr/lib/presto/plugin

    resources: { }

    nodeSelector: { }

    tolerations: [ ]

    affinity: { }

  worker:
    replicas: 2
    config:
      path: /usr/lib/presto/etc
      gracefulShutdown:
        enabled: true
        gracePeriodSeconds: 10
      server:
        port: 8080
        loglevel: "INFO"
      jvm:
        maxMemoryPercentage: "90"
        minMemoryPercentage: "80"
        gcMethod:
          type: "UseG1GC"
          g1:
            heapRegionSize: "32M"
        additional_params: [ ]
      node:
        environment: production
        dataDir: /data/presto
        pluginDir: /usr/lib/presto/plugin

    resources: { }

    nodeSelector: { }

    tolerations: [ ]

    affinity: { }

  connectors:
    memory.properties: |-
      connector.name=memory

    tpcds.properties: |-
      connector.name=tpcds
      tpcds.splits-per-node=4

service:
  labels: { }
  type: ClusterIP


exporters:
  jmx:
    enabled: true
    image:
      repository: sscaling/jmx-prometheus-exporter
      tag: 0.3.0
      pullPolicy: IfNotPresent

    port: 9999
    config:
      lowercaseOutputName: true
      lowercaseOutputLabelNames: true
      attrNameSnakeCase: false
      rules:
        # capture percentile and set quantile label
        - pattern: 'presto.plugin.hive<type=(.+), name=hive><>(.+AllTime).P(\d+): (.*)'
          name: 'presto_hive_$1_$2_seconds'
          type: GAUGE
          valueFactor: 0.001
          labels:
            quantile: '0.$3'
        # match non-percentiles
        - pattern: 'presto.plugin.hive<type=(.+), name=hive><>(.+AllTime.+): (.*)'
          name: 'presto_hive_$1_$2_seconds'
          type: GAUGE
          valueFactor: 0.001
          # counts
        - pattern: 'presto.plugin.hive<type=(.+), name=hive><>(.+TotalCount.*): (.*)'
          name: 'presto_hive_$1_$2_total'
          type: COUNTER
        # capture percentile and set quantile label
        - pattern: 'presto.plugin.hive.s3<type=(.+), name=hive><>(.+AllTime).P(\d+): (.*)'
          name: 'presto_hive_s3_$1_$2_seconds'
          type: GAUGE
          valueFactor: 0.001
          labels:
            quantile: '0.$3'
        # match non-percentiles
        - pattern: 'presto.plugin.hive.s3<type=(.+), name=hive><>(.+AllTime.+): (.*)'
          name: 'presto_hive_s3_$1_$2_seconds'
          type: GAUGE
          valueFactor: 0.001
          # counts
        - pattern: 'presto.plugin.hive.s3<type=(.+), name=hive><>(.+TotalCount.*): (.*)'
          name: 'presto_hive_s3_$1_$2_total'
          type: COUNTER
        # capture percentile and set quantile label
        - pattern: 'presto.plugin.hive.metastore.thrift<type=(.+), name=hive><>(.+AllTime).P(\d+): (.*)'
          name: 'presto_hive_metastore_thrift_$1_$2_seconds'
          type: GAUGE
          valueFactor: 0.001
          labels:
            quantile: '0.$3'
        # match non-percentiles
        - pattern: 'presto.plugin.hive.metastore.thrift<type=(.+), name=hive><>(.+AllTime.+): (.*)'
          name: 'presto_hive_metastore_thrift_$1_$2_count_seconds'
          type: GAUGE
          valueFactor: 0.001
        # counts
        - pattern: 'presto.plugin.hive.metastore.thrift<type=(.+), name=hive><>(.+TotalCount.*): (.*)'
          name: 'presto_hive_metastore_thrift_$1_$2_total'
          type: COUNTER
        - pattern: 'presto.execution<name=(.+)><>(.+AllTime).P(\d+): (.*)'
          name: 'presto_execution_$1_$2_seconds'
          type: GAUGE
          valueFactor: 0.001
          labels:
            quantile: '0.$3'
        - pattern: 'presto.execution<name=(.+)><>(.+AllTime.+): (.*)'
          name: 'presto_execution_$1_$2_seconds'
          type: GAUGE
          valueFactor: 0.001
        # counts
        - pattern: 'presto.execution<name=(.+)><>(.+TotalCount.*): (.*)'
          name: 'presto_execution_$1_$2_total'
          type: COUNTER
        - pattern: 'presto.memory<type=(.*), name=(.*)><>(.+): (.*)'
          name: 'presto_memory_$1_$2_$3'
          type: GAUGE
        - pattern: 'presto.failuredetector<name=HeartbeatFailureDetector><>ActiveCount: (.*)'
          name: 'presto_heartbeatdetector_activecount'
          type: GAUGE
      startDelaySeconds: 30
    env: {}
    resources: {}
    path: /metrics

    serviceMonitor:
      interval: 30s
      scrapeTimeout: 30s
      scheme: http
